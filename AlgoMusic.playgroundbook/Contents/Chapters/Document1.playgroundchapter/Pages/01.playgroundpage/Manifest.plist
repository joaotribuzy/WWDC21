<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>LiveViewEdgeToEdge</key>
	<true/>
	<key>LiveViewMode</key>
	<string>VisibleByDefault</string>
	<key>Name</key>
	<string>Name</string>
	<key>PlaygroundLoggingMode</key>
	<string>Off</string>
	<key>Version</key>
	<string>1.0</string>
	<key>UserModuleCodeCompletionDirectives</key>
	<array>
		<string>everything, hide</string>
		<string>description, hide, &quot;(hue: CGFloat, saturation: CGFloat, brightness: CGFloat, alpha: CGFloat)&quot;, &quot;(x: CGFloat, y: CGFloat)&quot;, &quot;(x: Float, y: Float)&quot;, &quot;(width: CGFloat, height: CGFloat)&quot;, &quot;(width: Float, height: Float)&quot;, &quot;(point: CGPoint)&quot;, &quot;(from: Decoder) throws&quot;, &quot;(music: Music, volume: Int)&quot;, &quot;playMusic(music: Music, volume: Int)&quot;, &quot;(sound: Sound, volume: Int)&quot;, &quot;playSound(sound: Sound, volume: Int)&quot;, &quot;from(playgroundValue: PlaygroundValue)&quot;, &quot;(sound: Sound)&quot;, &quot;(sound: Sound, loopFireHandler: (() -&gt; Void)?)&quot;</string>
		<string>identifier, hide, proxy, listener</string>
		<string>keyword, show, for, func, if, let, var, while, in</string>
		<string>currentmodule, show</string>
		<string>module, show, MyFiles</string>
		<string>snippet, show, repeat, switch, protocol, enum, struct, class, return</string>
		<string>literal, show, array, boolean, color, dictionary, image, string, integer, nil</string>
		<string>identifier, show, !, !=, (, (), (hue:saturation:brightness:alpha:), (red:green:blue:alpha:), (sound:), (withTimeInterval:repeats:block:), (x:y:), ), *, +, +=, -, -=, -&gt;, ., /, :, &lt;, =, &gt;, A1, A2, A3, A4, A5, AS1, AS2, AS3, AS4, AS5, AcademyEngravedLET, AmericanTypewriter, AnchorPoint, AppleSDGothicNeo, Arial, ArialRoundedMTBold, Array, Avenir, AvenirNext, AvenirNextCondensed, B1, B2, B3, B4, B5, BasicShape, Baskerville, Bodoni72, BradleyHand, C1, C2, C3, C4, C5, CS1, CS2, CS3, CS4, CS5, ChalkDuster, ChalkboardSE, Cochin, Color, Copperplate, Courier, CourierNew, D1, D2, D3, D4, D5, DS1, DS2, DS3, DS4, DS5, Didot, Double, E1, E2, E3, E4, E5, F1, F2, F3, F4, F5, FS1, FS2, FS3, FS4, FS5, Font, Futura, G1, G2, G3, G4, G5, GS1, GS2, GS3, GS4, GS5, Georgia, GillSans, Graphic, Helvetica, HelveticaNeue, HiraginoMinchoProN, HiraginoSans, Image, Impact, Instrument, Int, Kind, Label, Loop, MarkerFelt, Menlo, SonicMusic, Noteworthy, Optima, Palatino, Papyrus, PartyLET, PingFangSC, PingFangTC, Point, spriteA, spriteB, SavoyeLET, Scene, Shape, Size, SnellRoundhand, SonicSound, Speech, SpeechAccent, SpeechVoice, String, Superclarendon, SystemBoldItalic, SystemFontBlack, SystemFontBold, SystemFontHeavy, SystemFontLight, SystemFontMedium, SystemFontRegular, SystemFontSemibold, SystemFontThin, SystemFontUltraLight, SystemHeavyItalic, SystemItalic, Thonburi, Timer, TimesNewRoman, Tone, ToneOutput, Touch, TrebuchetMS, Verdana, Zapfino, _:, _:at:anchoredTo:, _:blend:, _:note:volume:, _:voice:, _:volume:, accent, accent:, addCaveGlitter(count:color:gradientColor:at:), addGraphicCluster(image:sounds:at:), addGraphicLoops(image:sounds:color:at:), addInstrument(image:color:at:), addTones(image:color:at:), after:, ahh, alien, alien2, alienGoodbye, alienHello, alienSirens, allowsTouchInteraction, alpha, american, angle, announcement, append(_:), at:, attack, australian, availableNotes, awakening, backUp, backgroundColor, backgroundImage, bassGuitar, bassSynth, beat, beat2, beat3, bells, birds, birds1, black, bloops, blue, boops, boops2, british, brokenGlass, brown, by:duration:, by:y:duration:, byAngle:duration:, canYouHearMe, capturedGraphicID, capturesTouches, cave, caveBeats, center, chime, chord, chord2, circle(radius:), circle(radius:color:gradientColor:), circlePoints(radius:count:), clap, clear, clear(), clomp, comeHere, comingTo, componentsByCharacter(), containsSubstring(_:), count, count:color:gradientColor:at:, cowBell, createColorGraphic(image:sound:), createCrystal(image:sound:), createGraphic(image:sound:), createGraphicLoop(image:sound:), creepy, creepy2, crystalSynth, cyan, darkGray, default, defaultPitch, defaultSpeed, defaultVolume, dinnerBell, distance(from:), doubleTouch, drill, droplet2, droplet3, drums, drums2, dumDeDum, duration:, electricGuitar, email, enumerated()), err, errie, errie6, etherial, etherial2, explosion, explosion2, fadeAlpha(by:duration:), fadeAlpha(to:duration:), fadeIn(after:), fadeOut(after:), firstTouch, firstTouchInGraphic, flute, flute2, font, fontSize, force, foundIt, from(_:), from:, galacticChime, galacticHorns, galacticSonar, galacticTelephone, gentle, getGraphics(at:in:), getGraphics(named:), getGraphicsWithName(containing:), getReady, glassClink, glow(), glow(radius:period:count:), gong, gotIt, graphic, graphics, gray, green, gridPoints(size:count:angle:), handDrums, harp, hasCollisionBorder, hearMeNow, height, highLow, highPitch, hits, hits2, horizontalGravity, horns, horns2, horns4, hue:saturation:brightness:alpha:, image, image:color:at:, image:name:, image:sound:, image:sounds:at:, image:sounds:color:at:, in:, init(), init(accent:), init(image:name:), init(pitch:volume:), init(position:previousPlaceDistance:firstTouch:), init(shape:color:), init(shape:color:gradientColor:name:), init(sound:loopFireHandler:), init(text:color:), init(text:color:font:size:name:), init(type:effectFrom:to:), init(wGrth:height:), irish, isGridVisible, isHidden, jungle, lab, labBeats, labBeats2, lastTouchInGraphic, layer, length, lightChord, lightGray, lightsUp, looking, looking3, loopFireHandler, low, magenta, mission, move(to:duration:), moveBy(x:y:duration:), name, nanana, notes, notes2, numberOfCharacters, offAndAway, onCollisionHandler, onTouchHandler, onTouchMovedHandler, oneTwoThree, orange, orbit(x:y:period:), overlay:, period:, period:count:, pi, piano, piano2, ping, ping2, ping3, pitch, pitch:volume:, place(_:at:), place(_:at:anchoredTo:), placedGraphics, play(tone:), play(tones:), playInstrument(_:note:volume:), playMusic(_:volume:), playSound(_:volume:), playWithMe, playing, pluck, polygon(radius:sides:), position, position:previousPlaceDistance:firstTouch:, powerUp, previousPlaceDistance, printer, pulsate(period:count:), purple, radius:, radius:color:gradientColor:, radius:count:, radius:period:count:, radius:points:sharpness:, radius:sides:, random(in:), randomCharacter, randomIndex, randomItem, rectangle(width:height:cornerRadius:), red, red:green:blue:alpha:, remove(_:), removeGraphics(named:), reversed(), ringing, rotate(byAngle:duration:), rotate(toAngle:duration:), rotation, scale, scale(by:duration:), scale(to:duration:), scaleX(by:y:duration:), scaleX(to:y:duration:), scene, scheduledTimer(withTimeInterval:repeats:block:), setOnCollisionHandler(_:), setOnTouchHandler, setOnTouchMovedHandler(_:), setTintColor(_:blend:), sevenSynth, shake(duration:), shakeItUp, shaker, shape:color:, shape:color:gradientColor:name:, sharps, shimmer, shimmer2, shipwreck, shuffle(), shuffled(), signals, silverware, sirens, size, size:count:angle:, slime, sonar2, sonar3, sonar4, sonar5, sonarHit, sonicSounds, sonicSounds2, sonicSounds3, sound, sound:, sound:loopFireHandler:, southAfrican, spaceCarnival, spaceGuitar, spaceHorn, spaceInvadors, spaceTrance, speak(_:voice:), speed, spin(period:), sqrt(), squarePoints(width:count:), star(radius:points:sharpness:), steelDrums, steelDrums2, stickDrop, stopSpeaking(), stopTones(), symbols, symbols2, symbols3, tapTap, taps, teslaCoil, text, text:color:, text:color:font:size:name:, textColor, thinking, thinking2, thud, thud2, thudSonar, tide, tide2, tink, tinkTink, to:duration:, to:y:duration:, toAngle:duration:, toggle(), touchHandler, touchedGraphic, tuneIn, turtle, twinkles, type:effectFrom:to:, underwater, underwaterThud, verticalGravity, vibration, vibrations2, vocals, volume, waaaa, warble, warmBells, weeOoo, weirdDinnerBell, weirdHits, weirdYoga, whaleSounds, white, width, width:count:, width:height:, width:height:cornerRadius:, windDown, windUp, windUp2, with:, withTimeInterval:repeats:block:, withoutWhitespace, wrench, x, x:y:, x:y:duration:, x:y:period:, xScale, y, yScale, yellow, yoga, yoga2, yoga3, zip, {, }</string>
	</array>
</dict>
</plist>
